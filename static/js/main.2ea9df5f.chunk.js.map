{"version":3,"sources":["serviceWorkerRegistration.js","useLocalStorage/index.js","ajax/index.js","views/dashboard/style.js","views/dashboard/binance-logo.svg","views/dashboard/index.jsx","router.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","getStorage","key","item","localStorage","getItem","JSON","parse","setStorage","value","setItem","stringify","get","args","method","request","post","delete","url","default_args","Promise","resolve","reject","aux","Object","assign","data","headers","fetch","res","json","response","message","this","bind","DashboardContainer","styled","div","df","BTCUSDT","base","quote","API3USDT","index","props","watchlist","prices","symbols","onAdd","ajax","result","forEach","r","symbol","price","lastPrice","percent","priceChangePercent","setState","WebSocket","onmessage","c","s","P","filter","status","includes","quoteAsset","v","baseAsset","k","className","style","marginBottom","src","logo","width","alt","keys","map","w","href","target","rel","fontWeight","fontSize","textAlign","padding","background","color","borderRadius","display","toLocaleString","minimumFractionDigits","maximumFractionDigits","paddingLeft","onClick","onRemove","colSpan","classNamePrefix","placeholder","styles","customStyles","onChange","option","options","i","label","Component","menu","provided","menuList","height","lineHeight","isSelected","isFocused","cursor","overflow","whiteSpace","textOverflow","Router","path","component","Dashboard","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","waitingServiceWorker","waiting","event","postMessage","type"],"mappings":"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","file":"static/js/main.2ea9df5f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { useState } from 'react';\n\n// export const useLocalStorage = (key, defaultValue) => {\n//     const stored = localStorage.getItem(key);\n//     const initial = stored ? JSON.parse(stored) : defaultValue;\n//     const [value, setValue] = useState(initial);\n\n//     useEffect(() => {\n//         localStorage.setItem(key, JSON.stringify(value));\n//     }, [key, value]);\n\n//     return [value, setValue];\n// };\n\nexport const getStorage = (key) => {\n    const item = localStorage.getItem(key);\n    return JSON.parse(item);\n}\n\nexport const setStorage = (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value));\n}\n\n\nexport const useLocalStorage = (key, initialValue) => {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n      try {\n        // Get from local storage by key\n        const item = localStorage.getItem(key);\n        // Parse stored json or if none return initialValue\n        return item ? JSON.parse(item) : initialValue;\n      } catch (error) {\n        // If error also return initialValue\n        console.log(error);\n        return initialValue;\n      }\n    });\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = (value) => {\n      try {\n        // Allow value to be a function so we have same API as useState\n        const valueToStore =\n          value instanceof Function ? value(storedValue) : value;\n        // Save state\n        setStoredValue(valueToStore);\n        // Save to local storage\n        localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error);\n      }\n    };\n    return [storedValue, setValue];\n  }","class Ajax {\n    constructor() {\n        this.request = this.request.bind(this);\n    }\n    get = (args) => {\n        args.method = 'get';\n        return this.request(args);\n    }\n    post = (args) => {\n        args.method = 'post';\n        return this.request(args);\n    }\n    delete = (args) => {\n        args.method = 'delete';\n        return this.request(args);\n    }\n    request = (args) => {\n        let default_args = {\n            url: args.url,\n            method: 'get',\n        }\n        \n\n        if (!args.method) args.method = default_args.method;\n\n        return new Promise((resolve, reject) => {\n            const url = args.url;\n            const aux = Object.assign({}, args);\n            delete aux.url;\n\n            if (aux.data) {\n                //aux.body = (JSON.de(aux.data));\n                // aux.body = formurlencoded(aux.data);\n                delete aux.data;\n            }\n\n            if (!aux.headers) aux.headers = {};\n\n            aux.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\n            fetch(url, aux)\n                .then(res => res.json())\n                .then((response) => {\n                    return resolve(response);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    return reject({message: 'Request Failed - ' + error});\n                });\n        });\n    }\n}\n\nexport default new Ajax();","import styled from 'styled-components/macro';\n\nexport const DashboardContainer = styled.div`\n\n    padding: 50px 20px;\n\n    .title {\n        font-size: 32px;\n        font-weight: 500;\n        letter-spacing: 1.62px;\n        margin-bottom: 31px;\n        margin-left: 8px;\n        text-align: center;\n    }\n\n    .table-container {\n        background-color: rgb(48, 48, 60);\n        max-width: 400px;\n        margin: auto;\n        padding: 20px;\n        font-size: 18px;\n    }\n\n    table {\n        width: 100%;\n        text-align: left;\n        border-collapse: collapse;\n        color: rgba(230, 235, 255, 0.7);\n        tr {\n            &:not(:last-child){\n                border-bottom: 1px solid rgba(230, 235, 255, 0.7);\n            }\n            \n        }\n        th, td {\n            padding: 16px 2px;\n        }\n\n        a, .fa-minus {\n            transition: color 0.2s ease;\n            &:hover {\n                color: white;\n            }\n        }\n\n        .fa-minus {\n            cursor: pointer;\n        }\n    }\n\n    select {\n        color: black;\n        width: 100%;\n    }\n\n    .react-select__control {\n        background: #23232CB3;\n        border: 1px solid transparent;\n        border-radius: 2px;\n        box-shadow: none;\n        min-height: 40px;\n        cursor: pointer;\n        color: #E6EBFFB3;\n        &:hover {\n            border-color: transparent;\n            background: #23232C;\n        }\n    }\n    .react-select__single-value {\n        color: inherit;\n    }\n    .react-select__input {\n        color: white !important;\n    }\n    .react-select__placeholder {\n        color: inherit;\n    }\n    .react-select__indicator {\n        color: inherit;\n        &:hover {\n            color: inherit;\n        }\n    }\n    .react-select__clear-indicator {\n        > svg {\n            height: 16px;\n            width: 16px;\n        }\n    }\n    .react-select__indicator-separator {\n        display: none;\n    }\n`;","export default __webpack_public_path__ + \"static/media/binance-logo.428d8599.svg\";","import React, { Component } from 'react';\nimport { getStorage, setStorage } from '../../useLocalStorage';\nimport ajax from 'ajax';\nimport { DashboardContainer } from './style';\nimport logo from './binance-logo.svg';\nimport Select from 'react-select';\n\nconst df = {\n    BTCUSDT: {base: 'BTC', quote: 'USDT'}, \n    API3USDT: {base: 'ETH', quote: 'USDT'}, \n};\n\nexport default class index extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            watchlist: getStorage('watchlist') || df,\n            prices: {},\n            symbols: []\n        }\n        this.onAdd = this.onAdd.bind(this)\n    }\n\n    componentDidMount() {\n\n        ajax.get({\n            url: `https://api.binance.com/api/v3/ticker/24hr`\n        }).then(result=>{\n            const {prices} = this.state;\n            result.forEach(r=>{\n                prices[r.symbol] = {\n                    price: +r.lastPrice,\n                    percent: +r.priceChangePercent\n                }\n            })\n            this.setState({prices})\n        })\n\n        // const ws = new WebSocket(\"wss://stream.binance.com:9443/ws/!miniTicker@arr\");\n        const ws = new WebSocket(\"wss://stream.binance.com:9443/ws/!ticker@arr\");\n        \n\n        ws.onmessage = (message) => {\n            const {prices} = this.state;\n            const result = JSON.parse(message.data);\n            result.forEach(r=>{\n                // const w = watchlist[r.s];\n                // if(w){\n                    const price = +r.c;\n                    // w.lastPrice = price;\n                    prices[r.s] = {\n                        price: price,\n                        percent: +r.P\n                    };\n                    // console.log(r.s, price)\n                // }\n            })\n            this.setState({\n                // watchlist,\n                prices\n            })\n        };\n\n        ajax.get({\n            url: 'https://api.binance.com/api/v1/exchangeInfo'\n        }).then(result=>{\n            this.setState({symbols: result.symbols.filter(s=>s.status==='TRADING' && ['USDT','AUD'].includes(s.quoteAsset))})\n        })\n    }\n\n    // getPrice(symbol){\n    //     ajax.get({\n    //         url: `https://api.binance.com/api/v3/ticker/price?symbol=${symbol}`\n    //     }).then(result=>{\n    //         const {prices} = this.state;\n    //         prices[symbol] = +result.price;\n    //         this.setState({prices})\n    //     })\n    // }\n\n    onAdd(index){\n        const {watchlist, symbols} = this.state;\n        const v = symbols[index];\n        watchlist[v.symbol] = {\n            base: v.baseAsset,\n            quote: v.quoteAsset\n        }; \n        this.setState({watchlist});\n        setStorage('watchlist', watchlist);\n        // this.getPrice(v.symbol);\n    }\n\n    onRemove(k){\n        return () => {\n            const {watchlist} = this.state;\n            delete watchlist[k];\n            this.setState({watchlist});\n            setStorage('watchlist', watchlist);\n        }\n    }\n\n    render() {\n        const {watchlist, prices, symbols} = this.state;\n\n        return (\n            <DashboardContainer>\n                <div className='title'>\n                    <div style={{marginBottom:8}}>My Watchlist</div>\n                    <img src={logo} style={{width:120}} alt='Binance Logo' />\n                </div>\n                <div className='table-container'>\n                    <table>\n                        <tbody>\n                            {\n                                Object.keys(watchlist).map(k=>{\n                                    const w = watchlist[k];\n                                    return (\n                                        <tr key={k}>\n                                            <th width='35%'>\n                                                <a href={`https://www.binance.com/en/trade/${w.base}_${w.quote}`}\n                                                    target='_blank'\n                                                    rel='noreferrer'\n                                                >\n                                                    {w.base}\n                                                    <span style={{fontWeight:400, fontSize:13}}> / {w.quote}</span>\n                                                </a>\n                                            </th>\n                                            <td width='30%' style={{textAlign:'right',fontWeight:500}}>{prices[k]?.price}</td>\n                                            <td width='30%' style={{textAlign:'right',padding:'0 2px'}}>\n                                                {prices[k] && \n                                                <div style={{\n                                                    background: prices[k].percent<0?'#e35e5e':'#2ead65',\n                                                    color: 'white',\n                                                    textAlign:'center',\n                                                    padding:'4px 0',\n                                                    width: 70,\n                                                    borderRadius: 4,\n                                                    fontSize:14,\n                                                    fontWeight:500,\n                                                    display: 'inline-block'\n                                                }}>\n                                                    {prices[k].percent>0&&'+'}{prices[k].percent.toLocaleString('en', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n                                                    %\n                                                </div>\n                                               }\n                                            </td>\n                                            <td width='5%' style={{paddingLeft:8}}>\n                                                <i className='fa fa-minus' onClick={this.onRemove(k)} />\n                                            </td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                            <tr>\n                                <td colSpan={4}>\n                                    <Select \n                                        className='react-select-container'\n                                        classNamePrefix='react-select'\n                                        placeholder='Search...'\n                                        styles={customStyles}\n                                        value={null}\n                                        onChange={option => {this.onAdd(option.value)}}\n                                        options={symbols.map((s,i)=>({value: i, label: `${s.baseAsset}/${s.quoteAsset}`}))}\n                                    />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </DashboardContainer>\n        )\n    }\n}\n\nconst customStyles = {\n    menu: (provided, state) => ({\n        ...provided,\n        background: '#3E404D'\n    }),\n    menuList: (provided, state) => ({\n        ...provided,\n        padding: '4px'\n    }),\n    option: (provided, state) => ({\n        ...provided,\n        height: 32,\n        lineHeight: '32px',\n        background: state.isSelected || state.isFocused ? '#30303C' : 'unset',\n        padding: '0 12px',\n        cursor: 'pointer',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        '&:hover': {\n            background: '#30303C'\n        }\n    }),\n}","import React from 'react';\nimport {Route, Switch, BrowserRouter} from 'react-router-dom';\nimport Dashboard from './views/dashboard';\n\nconst Router = props => {\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path='/' component={Dashboard} />\n            </Switch>\n        </BrowserRouter>\n    )\n};\n\nexport default Router;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport Router from './router';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register({\n\tonUpdate: registration => {\n\t\tconst waitingServiceWorker = registration.waiting\n\t\n\t\tif (waitingServiceWorker) {\n\t\t  waitingServiceWorker.addEventListener(\"statechange\", event => {\n\t\t\tif (event.target.state === \"activated\") {\n\t\t\t  window.location.reload()\n\t\t\t}\n\t\t  });\n\t\t  waitingServiceWorker.postMessage({ type: \"SKIP_WAITING\" });\n\t\t}\n\t  }\n});\n"],"sourceRoot":""}